version: "3.8"

services:
  db:
    image: postgres:16
    container_name: postgres-db
    environment:
      POSTGRES_USER: backend_user
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: backend_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U backend_user"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build: ./backend
    container_name: express-backend
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=development
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME=backend_user
      - DB_PASSWORD=password123
      - DB_NAME=backend_db
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/src:/app/src
    command: >
      sh -c "npm run migration:migrate && npm start"
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_BACKEND_URL=http://backend:3001
        - NEXT_PUBLIC_WS_URL=ws://backend:3001
    container_name: next-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_BACKEND_URL=http://backend:3001
      - NEXT_PUBLIC_WS_URL=ws://backend:3001
    depends_on:
      - backend
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
